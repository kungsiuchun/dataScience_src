library(dslabs)
data("heights")
library(tidyverse)
library(caret)


# Key points
# The regression approach can be extended to categorical data. For example, 
# we can try regression to estimate the conditional probability:
#   p(x)=Pr(Y=1|X=x)=£]0+£]1x 
# Once we have estimates  £]0  and   £]1 , we can obtain an actual prediction  p(x) . 
# Then we can define a specific decision rule to form a prediction.

y <- heights$height

set.seed(2, sample.kind = "Rounding")

test_index <- createDataPartition(y, times = 1, p = 0.5, list= FALSE)
train_set <- heights %>% slice(-test_index)
test_set <- heights %>% slice(test_index)


train_set %>%
  filter(round(height) == 66) %>%
  summarize(y_hat = mean(sex=="Female")) 

heights %>% 
  mutate(x = round(height)) %>%
  group_by(x) %>%
  filter(n() >= 10) %>%
  summarize(prop = mean(sex == "Female")) %>%
  ggplot(aes(x, prop)) +
  geom_point()

lm_fit <- mutate(train_set, y= as.numeric(sex=="Female")) %>%
  lm(y~height, data= .)
p_hat <- predict(lm_fit, test_set)
y_hat <- ifelse(p_hat > 0.5, "Female", "Male") %>% factor()
confusionMatrix(y_hat, test_set$sex)$overall["Accuracy"]
