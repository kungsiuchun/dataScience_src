# 2.3: Web Scraping
# Web Scraping


Web scraping is extracting data from a website.
The rvest web harvesting package includes functions to extract nodes of an HTML document: html_nodes() extracts all nodes of different types, and html_node() extracts the first node.
html_table() converts an HTML table to a data frame.

# import a webpage into R
library(rvest)
url <- "https://en.wikipedia.org/wiki/Murder_in_the_United_States_by_state"
h <- read_html(url)
class(h)
h

tab <- h %>% html_nodes("table")
tab <- tab[[2]]

tab

tab <- tab %>% html_table
class(tab)

tab <- tab %>% setNames(c("state", "population", "total", "murders", "gun_murders", "gun_ownership", "total_rate", "murder_rate", "gun_murder_rate"))
head(tab)

# Assessment: Web Scraping
library(rvest)
url <- "https://web.archive.org/web/20181024132313/http://www.stevetheump.com/Payrolls.htm"
h <- read_html(url)

nodes <- html_nodes(h, "table")

html_text(nodes[[8]])

html_table(nodes[[1]], fill =TRUE)

sapply(nodes[1:4], html_table)

html_table(nodes[[length(nodes)-2]])
html_table(nodes[[length(nodes)-1]])
html_table(nodes[[length(nodes)]])

tab_1 <- html_table(nodes[[10]])
tab_2 <- html_table(nodes[[19]])

col_names <- c("Team", "Payroll", "Average")

tab_1 <- tab_1[-1, -1]
tab_2 <- tab_2[-1,]
tab_1
names(tab_2) <- col_names
names(tab_1) <- col_names
tab_1
full_join(tab_1,tab_2, by = "Team")



library(rvest)
library(tidyverse)
url <- "https://en.wikipedia.org/w/index.php?title=Opinion_polling_for_the_United_Kingdom_European_Union_membership_referendum&oldid=896735054"
h <- read_html(url)
tab <- h %>% html_nodes("table")
length(tab)
tab
sapply(tab[5], html_table, fill=TRUE)

tab[[5]] %>% html_table(fill = TRUE) %>% names() 
